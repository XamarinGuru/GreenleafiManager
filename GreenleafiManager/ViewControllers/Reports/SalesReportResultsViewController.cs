// This file has been autogenerated from a class added in the UI designer.

using System;
using System.IO;
using CoreGraphics;
using Foundation;
using UIKit;
using System.Linq;

namespace GreenleafiManager
{
	public partial class SalesReportResultsViewController : UIViewController
	{
		public SalesReportModel salesReportModel { get; set; }
		public SalesReportResultsViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			if (salesReportModel == null)
			{
				salesReportModel = new SalesReportModel();
				salesReportModel.StartDate = DateTime.Now;
				salesReportModel.EndDate = DateTime.Now;
				salesReportModel.LocationName = "Invalid Data";
				salesReportModel.SalesPersonName = "Invalid Data";
			}

			DateRunLabel.Text = "Run on " + DateTime.Now;
			ItemsSoldLabel.Text = salesReportModel.ItemsSold.ToString();
			LocationLabel.Text = String.IsNullOrWhiteSpace(salesReportModel.LocationName) ? "" : salesReportModel.LocationName;
			ReportDateLabel.Text = salesReportModel.StartDate.ToString("MM-dd-yyyy") + " to " + salesReportModel.EndDate.ToString("MM-dd-yyyy");
			SalesPersonLabel.Text = String.IsNullOrWhiteSpace(salesReportModel.SalesPersonName) ? "" : salesReportModel.SalesPersonName;
			TotalSalesLabel.Text = salesReportModel.TotalSalePrice.ToString("C");
			TotalSalesWithTaxLabel.Text = salesReportModel.TotalIncludingTax.ToString("C"); 

		}

		void ConvertPDFFromView()
		{
			NSMutableData pdfData = new NSMutableData();

			//UIGraphics.BeginPDFContext
			UIGraphics.BeginPDFContext(pdfData, View.Bounds, null);
			UIGraphics.BeginPDFPage();
			CGContext pdfContext = UIGraphics.GetCurrentContext();
			View.Layer.RenderInContext(pdfContext);
			UIGraphics.EndPDFContent();

			var documentDirectories = NSSearchPath.GetDirectories(NSSearchPathDirectory.DocumentDirectory, NSSearchPathDomain.User, true);
			var documentDirectory = documentDirectories.ElementAt(0);
			var documentDirectoryFilename = Path.Combine(documentDirectory, "salesReport.pdf"); //Not sure about extension 
			NSError error;
			pdfData.Save(documentDirectoryFilename, true, out error);

			var printInfo = UIPrintInfo.PrintInfo;

			printInfo.Duplex = UIPrintInfoDuplex.LongEdge;

			printInfo.OutputType = UIPrintInfoOutputType.General;

			printInfo.JobName = "SalesReport";

			var printer = UIPrintInteractionController.SharedPrintController;

			printer.PrintInfo = printInfo;

			printer.PrintingItem = NSData.FromFile(documentDirectoryFilename);

			printer.ShowsPageRange = true;

			printer.Present(true, (handler, completed, err) =>
			{
				if (!completed && err != null)
				{
					Console.WriteLine("Printer Error");
				}
			});
		}
	}
}
